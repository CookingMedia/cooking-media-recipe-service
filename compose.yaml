name: cookingmedia_recipe
services:
  server:
    image: cm_recipe_api
    container_name: cm_recipe_api
    build:
      context: .
      dockerfile: CookingMedia.Recipe.Api/Dockerfile
    ports:
      - 5130:5130
      - 5131:5131
    environment:
      - ASPNETCORE_URLS=http://+:5130;http://+:5131
      - Kestrel__Endpoints__Http__Url=http://*:5130
      - Kestrel__Endpoints__gRPC__Url=http://*:5131
      - Kestrel__Endpoints__gRPC__Protocols=Http2
    env_file: .env
    networks:
      - default

# The commented out section below is an example of how to define a PostgreSQL
# database that your application can use. `depends_on` tells Docker Compose to
# start the database before your application. The `db-data` volume persists the
# database data between container restarts. The `db-password` secret is used
# to set the database password. You must create `db/password.txt` and add
# a password of your choosing to it before running `docker compose up`.
    depends_on:
      - db
  db:
    image: "mcr.microsoft.com/mssql/server:2022-latest"
    container_name: cm_recipe_db
    ports:
      - 1441:1433
    environment:
      - ACCEPT_EULA=Y
      - MSSQL_SA_PASSWORD=${DB_PASSWORD}
    env_file: .env
#     restart: always
#     user: postgres
#     secrets:
#       - db-password
    volumes:
      - db:/var/opt/mssql
    networks:
      - default
#     expose:
#       - 5432
#     healthcheck:
#       test: [ "CMD", "pg_isready" ]
#       interval: 10s
#       timeout: 5s
#       retries: 5
volumes:
  db:
    name: cm_recipe_db_data
networks:
  default:
    name: cm_network
    external: true
# secrets:
#   db-password:
#     file: db/password.txt

